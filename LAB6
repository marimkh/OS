#!/bin/bash

#1. Գրել սկրիպտ, որը տրված թվի համար կարտածի հաղորդագրություն այն մասին, արդյոք թիվը դրական է, բացասական, թե՝ 0։ Թիվը վավերացնել ռեգուլյար արտահայտության միջոցով։ Պայմանների ստուգման համար օգտագործել [[ ]] օպերատորը։
read -r -p "Enter a number: " number

if [[ $number -gt 0 ]]; then
  echo "The number is positive."
elif [[ $number -lt 0 ]]; then
  echo "The number is negative."
else
  echo "The number is 0."
fi


#2. Կատարել 1-ին կետը՝ պայմանների ստուգման համար օգտագործելով (( )) օպերատորը
read -r -p "Enter a number: " number

if ((number > 0)); then
  echo "The number is positive."
elif ((number < 0)); then
  echo "The number is negative."
else
  echo "The number is 0."
fi


#3. Գրել սկրիպտ, որը կստուգի, թե արդյոք տրված թիվը 2-ի, 3-ի եւ 5-ի բազմապատիկ է։
read -r -p "Enter a number: " number

if ((number % 2 == 0 && number % 3 == 0 && number % 5 == 0)); then
  echo "The number is divisible by 2, 3, and 5."
else
  echo "The number is not divisible by 2, 3, and 5."
fi


#4. Գրել սկրիպտ, որը կստուգի, թե արդյոք տրված թիվը 2-ի, 3-ի կամ 5-ի բազմապատիկ է։
read -r -p "Enter a number: " number

if ((number % 2 == 0  number % 3 == 0  number % 5 == 0)); then
  echo "The number is divisible by 2, 3, or 5."
else
  echo "The number is not divisible by 2, 3, or 5."
fi


#5. Մեկ հրամանի միջոցով ստեղծել նոր ֆայլ եւ այդ ֆայլին ավելացնել կատարելու թույլտվություն։
touch new_file.txt && chmod +x new_file.txt


#6. Մեկ հրամանի միջոցով ստուգել, թե արդյոք գոյություն ունի dir անունով դիրեկտորիա, եւ, եթե գոյություն չունի, ապա ստեղծել։
[ -d dir ] || mkdir dir


#7. Գրել սկրիպտ, որը կստուգի, թե արդյոք տրված թիվը գտնվում է սահմանված միջակայքում։ Ստուգվող թիվը եւ միջակայքի սահմանների թվերը ներմուծել read հրամանի միջոցով։ Իրականացնել տվյալների վավերացում։
Check(){
    if [[ $1 =~ ^-?[[:digit:]]+$ ]]; then
        echo "$1 is an integer."
    else
        echo "$1 is not an integer."
    fi
}

read -p "Enter a number: " num
read -p "Enter the lower limit of the range: " lower
read -p "Enter the upper limit of the range: " upper

Check $num
Check $lower
Check $upper

if ((num >= lower)) && ((num <= upper)); then
    echo "The number is in the specified range."
else
    echo "The number is outside the specified range."
fi


#8. Գրել սկրիպտ, որը որպես ներմուծվող արժեք կստանա մեկ բառ, եւ կստուգի արդյոք այն համընկնում է "Secret" բառի հետ։ read հրամանը կատարել այնպես, որ ներմուծված արժեք պահպանվի REPLY փոփոխականի մեջ, իսկ ներմուծումն իրականացնելիս տառերը չցուցադրվեն էկրանին։
read -sp  "Enter a word: " 

if [ "$REPLY" == "Secret" ]; then
  echo "The word matches 'Secret'."
else
  echo "The word does not match 'Secret'."
fi


#9. Գրել սկրիպտ, որը որպես ներմուծվող արժեք կստանա ֆայլի անուն։ Վավերացնել անունը հետեւյալ կանոններով. կարող է պարունակել տառեր, թվեր, - . _ սիմվոլները։ Եթե նման ֆայլ գոյություն չունի, ապա ստեղծել։ Ցուցադրել համապատասխան հաղորդագրություն ֆայլի ստեղծման կամ առկայության մասին։
read -r -p "Enter a filename: " filename

if [[ "$filename" =~ ^[A-Za-z0-9._-]+$ ]]; then
  touch "$filename"
  echo "File $filename has been created."
else
  echo "Invalid filename."
fi


#10. Գրել <<Հաշվիչ>> ծրագիր, որը կստանա ճիշտ 3 արժեք հետեւյալ հաջորդականությամբ. թիվ, գործողություն, թիվ։ Օր՝ 2 + 3։ Ստուգել ներմուծված արժեքների քանակը, եւ 3-ից տարբեր լինելու դեպքում արտածել հաղորդագրություն սխալի մասին։ Իրականացնել արժեքների վավերացում։ Գործողության համար սահմանել հետեւյալ ընդունելի արժեքները. + - * / **։ Արտածել գործողության արդյունքը։
read -r -p "Enter the first number: " num1
read -r -p "Enter the operator (+, -, *, /, ): " operator
read -r -p "Enter the second number: " num2

case $operator in
+) result=$((num1 + num2)) ;;
-) result=$((num1 - num2)) ;;
\*) result=$((num1 * num2)) ;;
/) result=$((num1 / num2)) ;;
\*\*) result=$((num1  num2)) ;;
*) echo "Invalid operator." ;;
esac

echo "Result of the operation: $result"
